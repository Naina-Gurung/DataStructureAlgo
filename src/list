1. /**
   * A tournament tree is a binary tree
   * where the parent is the minimum of the two children.
   * Given a tournament tree find the second minimum value in the tree.
   * A node in the tree will always have 2 or 0 children.
   * Also all leaves will have distinct and unique values.
   * 2
   * / \
   * 2 3
   * / \ | \
   * 4 2 5 3
   *
   * In this given tree the answer is 3. - complete
   */
 2. find if brackets are balance properly in a given string
 3. sum of contiguous subsequence with max sum - This is complete in LearningScala repo - important for interview
 4. Given a list of employee id and manager id pairs,and given a manager id
    print/return the manager hierarchy , starting at that manager.
    for eg: given-
    (manager_id,employee_id) as [(1,3),(2,3),(3,4)]
    and manager id 4 returns {4:[3],3:[1,2]}. How would you handle the opposite direction
    ie given an employee_id, print the
    hierarchy of managers?
 5. the intersection of two lists with output being in sorted order.
 6. Third highest salary in each department.
 7. implement a hive udf-  for a given string, return a score  based on the sentiment
     words found.
    (good: 1, average :0 , bad: -1), example- good food, bad service= 1-1=0
 8. print "TargetAs" if number is divisible  by 4 and 6, print "Target" if number is
    divisible by 4, and "As" if its by 6. - complete in checklist package.
 9. implement below methods:
   //stores the number in some data structure
   void store(n);
   //test whether the given number is present as sum of 2 numbers from datastructure store
   boolean test(v);
   eg: store -> 1,3,5,6
   tests
    4= true (1+3)
    5= false(no sum result to this)
    6=true (1+5)

 10. write a program to list factors of a given number - complete
     eg: inp=12 , factors are 1,2,3,,4,6,12

 11. convert roman to integer and vice versa
 12. print a binary tree level by level and zig zag order.
 13. find the intersection point in linkedlist, and
 if the nodes are objects of employee how will you equal it.
 14.
 Given a binary tree, find the lowest common ancestor (LCA) of two given nodes in the tree.

 According to the definition of LCA on Wikipedia: “The lowest common ancestor
 is defined between two nodes p and q as the lowest node in T that has both p and q
 as descendants (where we allow a node to be a descendant of itself).”

 Given the following binary tree:  root = [3,5,1,6,2,0,8,null,null,7,4]
    * 3
   * / \
   * 5   1
    / \  / \
    6 2  0  8
     / \
    7  4

 Input: root = [3,5,1,6,2,0,8,null,null,7,4], p = 5, q = 1
 Output: 3
 Explanation: The LCA of nodes 5 and 1 is 3.

 Input: root = [3,5,1,6,2,0,8,null,null,7,4], p = 5, q = 4
 Output: 5
 Explanation: The LCA of nodes 5 and 4 is 5, since a node can be a descendant of itself according to the LCA definition.

 All of the nodes' values will be unique.
 p and q are different and both values will exist in the binary tree

 15. Find all distinct palindromic sub-strings of a given string



